Apparement il y a un fichier Java qui fait à la fois office de Session Bean 
et d'entrée pour l'API (ContactFacadeRest.java) + l'entité correspondante (Contact.java)

J'ai eu le temps de faire que Contact (après avoir galéré à config) mais vous pouvez vous en inspirer pour faire le reste.

A chaque fois que vous faites un nouveau {NomEntite}FacadeRest.java faut l'ajouter au ApplicationConfig :
resources.add(services.{NomEntite}FacadeREST.class);

L'URL pour acceder aux méthodes de l'API c'est http://localhost:leport/ProjetJEE/webresources
pour choper tous les contact de la BD par exemple c'est :
http://localhost:leport/ProjetJEE/webresources/contact/create?login=monlogin&password=monpassword

Pour tester les URL de l'API vous pouvez tester avec le navigateur mais ça marchera que pour les GET
Pour les POST vous pouvez utiliser ARC c'est une extension chrome qui permet de faire des appels HTTP vers n'importe quel URL en GET ou POST
(Au pire on fait tout en GET pour le moment et on mettra les POST la ou il faut à la fin)

Problème de config :

- deja dans le persistance.xml verifiez que vous avez bien :
	- ProjetJEEPU comme Persistance Unit Name
	- dans JDBC connection j'pense que vous devez reconfig votre connexion à MYSQL
	(en mode source dans la partie <properties>)

- A droite dans le projet, verifiez que vous avez bien :
	- Web Pages
	- Source packages
	- Test packages
	- Libraries
	- Test Libraries
	- Enterprise Beans (Surtout ces deux la)
	- RESTful Web Services (Surtout ces deux la)
	- Configuration files

- Dans les librairies j'ai du ajouter à la main (me demandez pas pourquoi) :
	- Java EE 7 API Library
	- Java EE 7 Endorsed API
	- MySQL JDBC Driver avec le jar mysql-connector-java-5.1.23-bin.jar 
	(si vous l'avez pas faut la créer)